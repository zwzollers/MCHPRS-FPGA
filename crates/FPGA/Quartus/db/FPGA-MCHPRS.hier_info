|top
i_clk => comb.DATAIN
i_switches[0] => comb.DATAIN
i_switches[1] => comb.DATAIN
i_switches[2] => comb.DATAIN
i_switches[3] => comb.DATAIN
i_switches[4] => comb.DATAIN
i_switches[5] => comb.DATAIN
i_switches[6] => comb.DATAIN
i_switches[7] => comb.DATAIN
i_switches[8] => ~NO_FANOUT~
i_switches[9] => ~NO_FANOUT~
i_buttons[0] => comb.DATAIN
i_buttons[1] => ~NO_FANOUT~
i_buttons[2] => ~NO_FANOUT~
i_buttons[3] => ~NO_FANOUT~
o_LEDs[0] <= <GND>
o_LEDs[1] <= <GND>
o_LEDs[2] <= <GND>
o_LEDs[3] <= <GND>
o_LEDs[4] <= <GND>
o_LEDs[5] <= <GND>
o_LEDs[6] <= <GND>
o_LEDs[7] <= <GND>
o_LEDs[8] <= <GND>
o_LEDs[9] <= <GND>
i_RX => ~NO_FANOUT~
o_TX <= uart_transmit:transmitter.tx


|top|clk_div:refresh_clk
ar => clk_out~reg0.ACLR
ar => count[0].ACLR
ar => count[1].ACLR
ar => count[2].ACLR
ar => count[3].ACLR
ar => count[4].ACLR
ar => count[5].ACLR
ar => count[6].ACLR
ar => count[7].ACLR
ar => count[8].ACLR
ar => count[9].ACLR
ar => count[10].ACLR
ar => count[11].ACLR
ar => count[12].ACLR
ar => count[13].ACLR
ar => count[14].ACLR
ar => count[15].ACLR
ar => count[16].ACLR
ar => count[17].ACLR
ar => count[18].ACLR
ar => count[19].ACLR
ar => count[20].ACLR
clk_in => clk_out~reg0.CLK
clk_in => count[0].CLK
clk_in => count[1].CLK
clk_in => count[2].CLK
clk_in => count[3].CLK
clk_in => count[4].CLK
clk_in => count[5].CLK
clk_in => count[6].CLK
clk_in => count[7].CLK
clk_in => count[8].CLK
clk_in => count[9].CLK
clk_in => count[10].CLK
clk_in => count[11].CLK
clk_in => count[12].CLK
clk_in => count[13].CLK
clk_in => count[14].CLK
clk_in => count[15].CLK
clk_in => count[16].CLK
clk_in => count[17].CLK
clk_in => count[18].CLK
clk_in => count[19].CLK
clk_in => count[20].CLK
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|clk_div:baud_clk
ar => clk_out~reg0.ACLR
ar => count[0].ACLR
ar => count[1].ACLR
ar => count[2].ACLR
ar => count[3].ACLR
ar => count[4].ACLR
ar => count[5].ACLR
ar => count[6].ACLR
ar => count[7].ACLR
ar => count[8].ACLR
ar => count[9].ACLR
ar => count[10].ACLR
ar => count[11].ACLR
clk_in => clk_out~reg0.CLK
clk_in => count[0].CLK
clk_in => count[1].CLK
clk_in => count[2].CLK
clk_in => count[3].CLK
clk_in => count[4].CLK
clk_in => count[5].CLK
clk_in => count[6].CLK
clk_in => count[7].CLK
clk_in => count[8].CLK
clk_in => count[9].CLK
clk_in => count[10].CLK
clk_in => count[11].CLK
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|uart_transmit:transmitter
i_clk => tx~reg0.CLK
i_clk => bit_count[0].CLK
i_clk => bit_count[1].CLK
i_clk => bit_count[2].CLK
i_clk => bit_count[3].CLK
i_clk => state~5.DATAIN
i_rst => tx~reg0.PRESET
i_rst => bit_count[0].ACLR
i_rst => bit_count[1].ACLR
i_rst => bit_count[2].ACLR
i_rst => bit_count[3].ACLR
i_rst => state~7.DATAIN
i_start => state.OUTPUTSELECT
i_start => state.OUTPUTSELECT
i_start => state.OUTPUTSELECT
i_start => state.OUTPUTSELECT
i_start => tx.OUTPUTSELECT
i_start => state.OUTPUTSELECT
i_start => state.OUTPUTSELECT
i_start => state.OUTPUTSELECT
i_start => state.OUTPUTSELECT
tx_data[0] => Mux0.IN7
tx_data[0] => Selector4.IN2
tx_data[1] => Mux0.IN6
tx_data[2] => Mux0.IN5
tx_data[3] => Mux0.IN4
tx_data[4] => Mux0.IN3
tx_data[5] => Mux0.IN2
tx_data[6] => Mux0.IN1
tx_data[7] => Mux0.IN0
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE


